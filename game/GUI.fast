"gui" module

"control" useModule
"algebra" useModule
"array" useModule
"glutils" useModule

GUI: [{
  texture: (5 [GLuint] times);
  shader: GLuint;
  timeLoc: GLint;
  projLoc: GLint;
  modelLoc: GLint;
  healthLoc: GLint;
  
  init: [
    hpShaderSrc.shaderVert hpShaderSrc.shaderFrag ( ("u_modelTrans" @modelLoc) ("u_projTrans" @projLoc) ) loadShader !shader
  ] func;
  
  draw: [
    shader glUseProgram
    camera.getCombined GL_TRUE Nat8 cast 1i32 projLoc glUniformMatrix4fv
    center: player.state1 player.state0 - frameTime * player.state0 +;
    assets.hpBar center (400.0r32 300.0r32) - unwind 150.0r32 player.health * 150.0r32 player.health * 0.0r32 modelLoc batch.draw
    0n32 glUseProgram
  ] func;

  update: [
  
  ] func;

}] func;

hpShaderSrc: {
  shaderVert:
  "
  #version 330 core
  
  layout (location = 0) in vec3 aPosition;
  layout (location = 1) in vec2 aCoord;

  uniform mat4 u_projTrans;
  uniform mat4 u_modelTrans;
  
  out vec2 vCoord;
  
  void main() {
    vCoord = aCoord;
    gl_Position = u_projTrans * u_modelTrans * vec4(aPosition, 1.0);
  }
  ";

  shaderFrag:
  "
  #version 330 core
  
  precision mediump float;
  
  in vec2 vCoord;
  out vec4 color;

  uniform sampler2D u_Texture;
  
  void main() {
    color = texture(u_Texture, vCoord);
  }
  ";

};

