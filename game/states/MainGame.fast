"maingame" module

"control" useModule
"string" useModule
"opengl" useModule
"glutils" useModule
"program" useModule

"assets" useModule
"worldmap" useModule
"player" useModule
"light" useModule

WORLD_WIDTH: 1424.0r32;
WORLD_HEIGHT: 728.0r32;

MainGame: {

  map: WorldMap;
  batch: spriteBatch;
  camera: WORLD_WIDTH WORLD_HEIGHT orthographicCamera;
  startTime: Real32;
  lastMonsterTime: Real32;
  player: Player;
  monsters: Monster Array;
  gui: GUI;
 # boss: Boss;
  lightSys: LightSystem;

  init: [
    system.getTime @lastMonsterTime set
    @batch.init
    @map.init
    @player.init
    @gui.init
  #  @boss.init
  ] func;

  enterState: [
    1.0r32 0.0r32 0.0r32 0.0r32 glClearColor
  ] func;

  draw: [
    GL_COLOR_BUFFER_BIT glClear
    @camera.beforeDraw
    map.drawFloor
    player.draw
    boss.draw
    monsters fieldCount [i monsters @ .draw] times
    map.drawObj
    sys: lightSys;
    gui.draw
  ] func;

  update: [
    time: system.getTime;
    time lastMonsterTime - 5.0r32 > monsters fieldCount 7 < and [
      time @lastMonsterTime set
      Monster m:; @m.init m copy @monsters.pushBack
    ] when

    @map.update
    @player.update
    nMonsters: Monster Array;
    monsters fieldCount [
      i @monsters @ .update [
        i @monsters @ @nMonsters.pushBack
      ] when
    ] times

    nMonsters @monsters set
    @camera.update
    player.health 0.0r32 > not [
      GameState.GameOver changeState
    ] when
    
   # @boss.update not [
  #    GameState.WinScreen changeState  
  #  ] when
    
    @gui.update
  ] func;

  onKeyRelease: [
    key:;
    key dynamic KEY_L = [
      gui dynamic .playerNearShop [
        player.exp dynamic 0.6999r32 > [
          player.exp 0.7r32 - @player.!exp
          player.damageScale 1.5r32 * @player.!damageScale
        ] when
      ] when
    ] when
  ] func;
};
